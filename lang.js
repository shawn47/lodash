define(['./clone', './cloneDeep', './cloneDeepWith', './cloneWith', './eq', './gt', './gte', './isArguments', './isArray', './isArrayLike', './isArrayLikeObject', './isBoolean', './isDate', './isElement', './isEmpty', './isEqual', './isEqualWith', './isError', './isFinite', './isFunction', './isInteger', './isLength', './isMatch', './isMatchWith', './isNaN', './isNative', './isNil', './isNull', './isNumber', './isObject', './isObjectLike', './isPlainObject', './isRegExp', './isSafeInteger', './isString', './isSymbol', './isTypedArray', './isUndefined', './lt', './lte', './toArray', './toInteger', './toLength', './toNumber', './toPlainObject', './toSafeInteger', './toString'], function(clone, cloneDeep, cloneDeepWith, cloneWith, eq, gt, gte, isArguments, isArray, isArrayLike, isArrayLikeObject, isBoolean, isDate, isElement, isEmpty, isEqual, isEqualWith, isError, isFinite, isFunction, isInteger, isLength, isMatch, isMatchWith, isNaN, isNative, isNil, isNull, isNumber, isObject, isObjectLike, isPlainObject, isRegExp, isSafeInteger, isString, isSymbol, isTypedArray, isUndefined, lt, lte, toArray, toInteger, toLength, toNumber, toPlainObject, toSafeInteger, toString) {
  return {
    'clone': clone,
    'cloneDeep': cloneDeep,
    'cloneDeepWith': cloneDeepWith,
    'cloneWith': cloneWith,
    'eq': eq,
    'gt': gt,
    'gte': gte,
    'isArguments': isArguments,
    'isArray': isArray,
    'isArrayLike': isArrayLike,
    'isArrayLikeObject': isArrayLikeObject,
    'isBoolean': isBoolean,
    'isDate': isDate,
    'isElement': isElement,
    'isEmpty': isEmpty,
    'isEqual': isEqual,
    'isEqualWith': isEqualWith,
    'isError': isError,
    'isFinite': isFinite,
    'isFunction': isFunction,
    'isInteger': isInteger,
    'isLength': isLength,
    'isMatch': isMatch,
    'isMatchWith': isMatchWith,
    'isNaN': isNaN,
    'isNative': isNative,
    'isNil': isNil,
    'isNull': isNull,
    'isNumber': isNumber,
    'isObject': isObject,
    'isObjectLike': isObjectLike,
    'isPlainObject': isPlainObject,
    'isRegExp': isRegExp,
    'isSafeInteger': isSafeInteger,
    'isString': isString,
    'isSymbol': isSymbol,
    'isTypedArray': isTypedArray,
    'isUndefined': isUndefined,
    'lt': lt,
    'lte': lte,
    'toArray': toArray,
    'toInteger': toInteger,
    'toLength': toLength,
    'toNumber': toNumber,
    'toPlainObject': toPlainObject,
    'toSafeInteger': toSafeInteger,
    'toString': toString
  };
});
